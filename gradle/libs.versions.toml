[versions]
agp = "8.8.0-alpha05"
androidx-activityCompose = "1.10.0"
androidx-annotation = "1.9.1"
androidx-core = "1.15.0"
androidx-browser = "1.8.0"
androidx-video = "1.2.0" # https://github.com/dsa28s/compose-video/releases
androidx-media = "1.5.1" # https://developer.android.com/jetpack/androidx/releases/media3
appcompat = "1.7.0" # https://developer.android.com/jetpack/androidx/releases/appcompat
constraintlayout = "0.5.1"
compose-plugin = "1.7.3"
kotlin = "2.1.10"
kotlin-coroutines = "1.10.1"
kotlin-serialization-runtime = "1.8.0"
kotlin-datetime = "0.6.2" # https://github.com/Kotlin/kotlinx-datetime/releases
kotlin-immutable = "0.3.8"
ksp = "2.1.10-1.0.30"
kotlin-inject = "0.7.2"
kotlin-inject-anvil = "0.1.2"
decompose = "3.2.2"
essenty = "2.5.0"
settings = "1.3.0"
markdown = "0.31.0" # https://github.com/mikepenz/multiplatform-markdown-renderer/releases
ktor = "3.1.1" # https://ktor.io/
timber = "5.0.1" # https://github.com/JakeWharton/timber/releases
credentials = "1.3.0" # https://developer.android.com/jetpack/androidx/releases/credentials
googleid = "1.1.1" # https://developers.google.com/identity/android-credential-manager/releases
detekt = "1.23.8" # https://detekt.dev/docs/gettingstarted/gradle/
detekt-ruleset-compiler = "0.0.4" # https://github.com/BraisGabin/detekt-compiler-rules/releases
detekt-ruleset-compose = "0.4.22" # https://github.com/mrmans0n/compose-rules/releases
detekt-ruleset-decompose = "1.0.1" # https://github.com/LionZXY/detekt-decompose-rule/releases
buildkonfig = "5.5.1"
atomicflu = "0.27.0" # https://github.com/Kotlin/kotlinx-atomicfu
lifecycle = "2.8.7" # https://developer.android.com/jetpack/androidx/releases/lifecycle
compose-placeholder = "1.0.9"
androidx-compose = "1.7.8" # https://github.com/eygraber/compose-placeholder/releases
composables = "1.20.1" # https://github.com/composablehorizons/compose-unstyled
klibs-kstorage = "3.2.6" # https://github.com/makeevrserg/klibs.kstorage
room = "2.7.0-beta01" # https://developer.android.com/jetpack/androidx/releases/room
accompanist = "0.37.2" # https://github.com/google/accompanist/releases

[libraries]
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-ksp-gradle = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
compose-multiplatform-gradle = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-plugin" }
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradle = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
composables = { module = "com.composables:core", version.ref = "composables" }
klibs-kstorage = { module = "ru.astrainteractive.klibs:kstorage", version.ref = "klibs-kstorage" }

# Linters
detekt-ruleset-compiler = { module = "com.braisgabin.detekt:kotlin-compiler-wrapper", version.ref = "detekt-ruleset-compiler" }
detekt-ruleset-ktlint = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-ruleset-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "detekt-ruleset-compose" }
detekt-ruleset-decompose = { module = "uk.kulikov.detekt.decompose:decompose-detekt-rules", version.ref = "detekt-ruleset-decompose" }

constraintlayout = { module = "tech.annexflow.compose:constraintlayout-compose-multiplatform", version.ref = "constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-core = { module = "androidx.core:core", version.ref = "androidx-core" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
kotlin-inject-ksp = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlin-inject" }
kotlin-inject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime-kmp", version.ref = "kotlin-inject" }
kotlin-inject-anvil-ksp = { module = "software.amazon.lastmile.kotlin.inject.anvil:compiler", version.ref = "kotlin-inject-anvil" }
kotlin-inject-anvil-runtime = { module = "software.amazon.lastmile.kotlin.inject.anvil:runtime", version.ref = "kotlin-inject-anvil" }
kotlin-inject-anvil-runtime-optional = { module = "software.amazon.lastmile.kotlin.inject.anvil:runtime-optional", version.ref = "kotlin-inject-anvil" }
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-composeExtension = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }

androidx-credentials = { module = "androidx.credentials:credentials", version.ref = "credentials" }
androidx-credentials-play = { module = "androidx.credentials:credentials-play-services-auth", version.ref = "credentials" }
identity = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "googleid" }

kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization-runtime" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-datetime" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlin-coroutines" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlin-immutable" }

essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
essenty-lifecycle-coroutines = { module = "com.arkivanov.essenty:lifecycle-coroutines", version.ref = "essenty" }
markdown-renderer = { module = "com.mikepenz:multiplatform-markdown-renderer", version.ref = "markdown" }

compose-placeholder = { module = "com.eygraber:compose-placeholder", version.ref = "compose-placeholder" }

androidx-browser = { module = "androidx.browser:browser", version.ref = "androidx-browser" }
androidx-lifecycle = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycle" }
androidx-video = { module = "io.sanghun:compose-video", version.ref = "androidx-video" }
androidx-media-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "androidx-media" }
androidx-media-session = { module = "androidx.media3:media3-session", version.ref = "androidx-media" }
androidx-media-ui = { module = "androidx.media3:media3-ui", version.ref = "androidx-media" }


settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
settings-observable = { module = "com.russhwolf:multiplatform-settings-make-observable", version.ref = "settings" }
settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }

room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js-wasm-js", version.ref = "ktor" }
ktor-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

atomicflu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicflu" }

timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "androidx-compose" }

accompanist-drawable = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
buildkonfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildkonfig" }
atomicflu = { id = "org.jetbrains.kotlinx.atomicfu", version.ref = "atomicflu" }
